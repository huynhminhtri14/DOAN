<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAADjsAAA47AAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAASAAAAEAAAABAAAAAQAAAAEAAA
        ABAAAAAQAAAAEAAAABAAAAASAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAEgAAABAAAAAQAAAAEAAA
        ABAAAAAQAAAAEAAAABAAAAAQAAAAEgAAAAYAAAAAAAAAAAAAAAAAAAABAAAAuQAAAPcAAADwAAAA8gAA
        APIAAADyAAAA8gAAAPIAAADyAAAA8AAAAPcAAAC5AAAAAQAAAAAAAAAAAAAAAQAAALkAAAD3AAAA8AAA
        APIAAADyAAAA8gAAAPIAAADyAAAA8gAAAPAAAAD3AAAAuQAAAAEAAAAAAAAAAAAAABEAAADvAAAA/wAA
        APIAAADyAAAA8gAAAPIAAADyAAAA8gAAAPIAAADyAAAA/wAAAO4AAAARAAAAAAAAAAAAAAARAAAA7gAA
        AP8AAADyAAAA8gAAAPIAAADyAAAA8gAAAPIAAADyAAAA8gAAAP8AAADvAAAAEQAAAAAAAAAAAAAAEAAA
        APEAAADyAAAAHwAAAAwAAAARAAAAEAAAABAAAAARAAAADAAAAB8AAADyAAAA8AAAABAAAAAAAAAAAAAA
        ABAAAADwAAAA8gAAAB8AAAAMAAAAEQAAABAAAAAQAAAAEQAAAAwAAAAfAAAA8gAAAPEAAAAQAAAAAAAA
        AAAAAAAQAAAA8wAAAPIAAAAQAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAEAAAAPIAAADyAAAAEAAA
        AAAAAAAAAAAAEAAAAPIAAADyAAAAEAAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAABAAAADyAAAA8wAA
        ABAAAAAAAAAAAAAAABAAAADzAAAA8gAAABEAAAAAAAAAAgAAAAIAAAACAAAAAwAAAAAAAAASAAAA8gAA
        APIAAAAQAAAAAAAAAAAAAAAQAAAA8gAAAPIAAAARAAAAAAAAAAIAAAACAAAAAgAAAAMAAAAAAAAAEgAA
        APIAAADzAAAAEAAAAAAAAAAAAAAAEAAAAPMAAADyAAAAEAAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAA
        ABAAAADyAAAA8gAAABAAAAAAAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAQAAAAEAAAAAAAAAAQAA
        AAAAAAAQAAAA8gAAAPMAAAAQAAAAAAAAAAAAAAAQAAAA8wAAAPIAAAARAAAAAAAAAAIAAAAGAAAAEgAA
        ABEAAAAMAAAAHwAAAPIAAADwAAAAEAAAAAAAAAAAAAAAEAAAAPIAAADyAAAAEQAAAAAAAAACAAAABgAA
        ABIAAAARAAAADAAAAB8AAADyAAAA8QAAABAAAAAAAAAAAAAAABAAAADzAAAA8gAAABAAAAAAAAAAAAAA
        AHkAAAD8AAAA7gAAAPIAAADyAAAA/wAAAO4AAAARAAAAAAAAAAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAA
        AAAAAAB5AAAA/AAAAO4AAADyAAAA8gAAAP8AAADvAAAAEQAAAAAAAAAAAAAAEAAAAPEAAADyAAAAIAAA
        AAgAAAAgAAAA5gAAAP8AAADxAAAA8gAAAPAAAAD3AAAAuQAAAAEAAAABAAAAAAAAABAAAADwAAAA8gAA
        ACAAAAAIAAAAIAAAAOYAAAD/AAAA8QAAAPIAAADwAAAA9wAAALoAAAABAAAAAAAAAAAAAAARAAAA7wAA
        AP8AAADyAAAA8QAAAPIAAAD/AAAAuwAAAAgAAAASAAAAEAAAABIAAAAGAAAAAAAAAAEAAAAAAAAAEQAA
        AO4AAAD/AAAA8gAAAPEAAADyAAAA/wAAALsAAAAIAAAAEgAAABAAAAASAAAABgAAAAAAAAAAAAAAAAAA
        AAEAAAC6AAAA+AAAAPEAAADzAAAA8gAAAO4AAAA/AAAAAAAAAAMAAAAAAAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAABAAAAugAAAPgAAADxAAAA8wAAAPIAAADuAAAAPwAAAAAAAAADAAAAAAAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAQAAAANAAAADAAAAAsAAAANAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAADQAAAAwAAAALAAAADQAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAABAAAAA0AAAAMAAAADAAAAAsAAAANAAAAEgAAABAAAAAQAAAAEAAA
        ABIAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAANAAAADAAAAAwAAAALAAAADQAAABIAAAAQAAAAEAAA
        ABAAAAASAAAABgAAAAAAAAAAAAAAAAAAAAEAAAC6AAAA+AAAAPEAAADzAAAA8wAAAPMAAADyAAAA8gAA
        APIAAADwAAAA9wAAALkAAAABAAAAAAAAAAAAAAABAAAAuQAAAPgAAADxAAAA8wAAAPMAAADzAAAA8gAA
        APIAAADyAAAA8AAAAPcAAAC5AAAAAQAAAAAAAAAAAAAAEQAAAO8AAAD/AAAA8gAAAPIAAADyAAAA8gAA
        APIAAADyAAAA8gAAAPIAAAD/AAAA7gAAABEAAAAAAAAAAAAAABEAAADuAAAA/wAAAPIAAADyAAAA8gAA
        APIAAADyAAAA8gAAAPIAAADyAAAA/wAAAO8AAAARAAAAAAAAAAAAAAAQAAAA8QAAAPIAAAAfAAAADAAA
        ABEAAAAQAAAAEAAAABEAAAAMAAAAHwAAAPIAAADwAAAAEAAAAAAAAAAAAAAAEAAAAPAAAADyAAAAHwAA
        AAwAAAARAAAAEAAAABAAAAARAAAADAAAAB8AAADyAAAA8QAAABAAAAAAAAAAAAAAABAAAADzAAAA8gAA
        ABAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAAAAAAAAAQAAAA8gAA
        APIAAAAQAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAEAAAAPIAAADzAAAAEAAAAAAAAAAAAAAAEAAA
        APMAAADyAAAAEQAAAAAAAAACAAAAAgAAAAIAAAADAAAAAAAAABIAAADyAAAA8gAAABAAAAAAAAAAAAAA
        ABAAAADyAAAA8gAAABEAAAAAAAAAAgAAAAIAAAACAAAAAwAAAAAAAAASAAAA8gAAAPMAAAAQAAAAAAAA
        AAAAAAAQAAAA8wAAAPIAAAAQAAAAAAAAAAEAAAABAAAAAAAAAAEAAAAAAAAAEAAAAPIAAADyAAAAEAAA
        AAAAAAAAAAAAEAAAAPIAAADyAAAAEAAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAABAAAADyAAAA8wAA
        ABAAAAAAAAAAAAAAABAAAADzAAAA8gAAABEAAAAAAAAAAgAAAAYAAAASAAAAEQAAAAwAAAAfAAAA8gAA
        APAAAAAQAAAAAAAAAAAAAAAQAAAA8gAAAPIAAAARAAAAAAAAAAIAAAAGAAAAEgAAABEAAAAMAAAAHwAA
        APIAAADxAAAAEAAAAAAAAAAAAAAAEAAAAPMAAADyAAAAEAAAAAAAAAAAAAAAeQAAAPwAAADuAAAA8gAA
        APIAAAD/AAAA7gAAABEAAAAAAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAAAAAHkAAAD8AAAA7gAA
        APIAAADyAAAA/wAAAO8AAAARAAAAAAAAAAAAAAAQAAAA8QAAAPIAAAAgAAAACAAAACAAAADmAAAA/wAA
        APEAAADyAAAA8AAAAPcAAAC5AAAAAQAAAAEAAAAAAAAAEAAAAPAAAADyAAAAIAAAAAgAAAAgAAAA5gAA
        AP8AAADxAAAA8gAAAPAAAAD3AAAAugAAAAEAAAAAAAAAAAAAABEAAADvAAAA/wAAAPIAAADxAAAA8gAA
        AP8AAAC7AAAACAAAABIAAAAQAAAAEgAAAAYAAAAAAAAAAQAAAAAAAAARAAAA7gAAAP8AAADyAAAA8QAA
        APIAAAD/AAAAuwAAAAgAAAASAAAAEAAAABIAAAAGAAAAAAAAAAAAAAAAAAAAAQAAALoAAAD3AAAA8AAA
        APIAAADwAAAA7AAAAD4AAAAAAAAAAwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAC5AAAA9wAA
        APAAAADyAAAA8AAAAOwAAAA+AAAAAAAAAAMAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAABgAA
        ABIAAAAQAAAAEAAAABEAAAAMAAAAAAAAAAIAAAABAAAAAQAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAYAAAASAAAAEAAAABAAAAARAAAADAAAAAAAAAACAAAAAQAAAAEAAAABAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////0ACQAKX6ZfpQAJAAoAAAAGAAYABgAGAAYWhhaGEIYQhhKGEoYQB
        hAGGAYYBgACAAYACgAKASIBJQIlAiUACQAKAAAABgAGAAYABgAGFoYWhhCGEIYShhKGEAYQBhgGGAYAA
        gAGAAoACgEiASUACQAKSXpJfQF9AX/////8=
</value>
  </data>
</root>